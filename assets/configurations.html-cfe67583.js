import{_ as n,X as c,Y as h,Z as e,a1 as a,$ as i,a4 as s,a3 as l,C as r}from"./framework-a4aa538b.js";const u={},p=e("h1",{id:"配置项",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#配置项","aria-hidden":"true"},"#"),a(" 配置项")],-1),m=e("p",null,"openGemini 配置项解释",-1),b=e("h2",{id:"common",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#common","aria-hidden":"true"},"#"),a(" [common]")],-1),f=e("p",null,[e("strong",null,"common"),a("是ts-sql、ts-store、ts-meta公共的配置项。")],-1),x={id:"meta-join",tabindex:"-1"},g=e("a",{class:"header-anchor",href:"#meta-join","aria-hidden":"true"},"#",-1),_=l('<ul><li><p>类型: <code>[]string</code></p></li><li><p>默认值: <code>无</code></p></li><li><p>SQL / STOR和META的RPC通信地址。比如：<code>[&quot;127.0.0.1:8092&quot;, &quot;127.0.0.2:8092&quot;, &quot;127.0.0.3:8092&quot;]</code></p></li></ul><h3 id="ha-enable" tabindex="-1"><a class="header-anchor" href="#ha-enable" aria-hidden="true">#</a> ha-enable</h3><ul><li><p>类型: <code>bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>基于共享存储的HA开关，目前仅支持共享存储可设置为true。</p></li><li><p>生产环境不建议开启。</p></li></ul><h3 id="executor-memory-size-limit" tabindex="-1"><a class="header-anchor" href="#executor-memory-size-limit" aria-hidden="true">#</a> executor-memory-size-limit</h3><ul><li><p>类型: <code>string | toml.Size</code></p></li><li><p>默认值: <code>0</code></p></li><li><p>执行内存大小限制，比如 <code>256GB</code>，<code>0</code>表示不限制。</p></li></ul><h3 id="executor-memory-wait-time" tabindex="-1"><a class="header-anchor" href="#executor-memory-wait-time" aria-hidden="true">#</a> executor-memory-wait-time</h3><ul><li><p>类型: <code>string | toml.Duration</code></p></li><li><p>默认值: <code>0s</code></p></li><li><p>执行内存等待时间，比如 <code>120s</code>，<code>0s</code>表示不限制。</p></li></ul><h3 id="pprof-enabled" tabindex="-1"><a class="header-anchor" href="#pprof-enabled" aria-hidden="true">#</a> pprof-enabled</h3><ul><li><p>类型: <code>bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否开启go pprof服务，监控内存、CPU、goroutine等信息。</p></li></ul>',9),q={id:"cpu-num",tabindex:"-1"},y=e("a",{class:"header-anchor",href:"#cpu-num","aria-hidden":"true"},"#",-1),w=l('<ul><li><p>类型: <code>int</code></p></li><li><p>默认值: <code>0</code></p></li><li><p>可使用的cpu核心数，<code>0</code>表示自动获取，docker环境中建议手动设置。</p></li></ul><h3 id="memory-size" tabindex="-1"><a class="header-anchor" href="#memory-size" aria-hidden="true">#</a> memory-size</h3><ul><li><p>类型: <code>string | toml.Size</code></p></li><li><p>默认值: <code>0</code></p></li><li><p>可使用的内存大小，比如：<code>256GB</code>，<code>0</code>表示不限制。</p></li></ul><h3 id="ignore-empty-tag" tabindex="-1"><a class="header-anchor" href="#ignore-empty-tag" aria-hidden="true">#</a> ignore-empty-tag</h3><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否忽略空tag。</p></li></ul><h3 id="report-enable" tabindex="-1"><a class="header-anchor" href="#report-enable" aria-hidden="true">#</a> report-enable</h3><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>true</code></p></li><li><p>是否上报遥测数据到openGemini服务器。</p></li></ul><h3 id="enable-tag-array" tabindex="-1"><a class="header-anchor" href="#enable-tag-array" aria-hidden="true">#</a> enable-tag-array</h3><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>写入是否支持tag数组。</p></li></ul><h2 id="meta" tabindex="-1"><a class="header-anchor" href="#meta" aria-hidden="true">#</a> [meta]</h2><p><strong>meta</strong>是ts-meta专属配置。</p>',11),k={id:"bind-address",tabindex:"-1"},v=e("a",{class:"header-anchor",href:"#bind-address","aria-hidden":"true"},"#",-1),D=e("ul",null,[e("li",null,[e("p",null,[a("类型: "),e("code",null,"string")])]),e("li",null,[e("p",null,[a("默认值: "),e("code",null,"无")])]),e("li",null,[e("p",null,[a("meta提供服务的地址，比如："),e("code",null,"127.0.0.1:8088"),a("。")])])],-1),T={id:"http-bind-address",tabindex:"-1"},z=e("a",{class:"header-anchor",href:"#http-bind-address","aria-hidden":"true"},"#",-1),S=e("ul",null,[e("li",null,[e("p",null,[a("类型: "),e("code",null,"string")])]),e("li",null,[e("p",null,[a("默认值: "),e("code",null,"无")])]),e("li",null,[e("p",null,[a("meta提供HTTP服务的地址，比如："),e("code",null,"127.0.0.1:8091"),a("。可外部访问。")])])],-1),A={id:"rpc-bind-address",tabindex:"-1"},E=e("a",{class:"header-anchor",href:"#rpc-bind-address","aria-hidden":"true"},"#",-1),C=e("ul",null,[e("li",null,[e("p",null,[a("类型: "),e("code",null,"string")])]),e("li",null,[e("p",null,[a("默认值: "),e("code",null,"无")])]),e("li",null,[e("p",null,[a("meta提供RPC服务的地址，比如："),e("code",null,"127.0.0.1:8092"),a("。仅内部通信使用。")])])],-1),H={id:"dir",tabindex:"-1"},I=e("a",{class:"header-anchor",href:"#dir","aria-hidden":"true"},"#",-1),P=l('<ul><li><p>类型: <code>string</code></p></li><li><p>默认值: <code>无</code></p></li><li><p>meta数据保存目录。</p></li></ul><h3 id="expand-shards-enable" tabindex="-1"><a class="header-anchor" href="#expand-shards-enable" aria-hidden="true">#</a> expand-shards-enable</h3><ul><li><p>类型: <code>bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否扩大shards。</p></li></ul><h3 id="retention-autocreate" tabindex="-1"><a class="header-anchor" href="#retention-autocreate" aria-hidden="true">#</a> retention-autocreate</h3><ul><li><p>类型: <code>bool</code></p></li><li><p>默认值: <code>true</code></p></li><li><p>是否自动创建retention policy。</p></li></ul><h3 id="election-timeout" tabindex="-1"><a class="header-anchor" href="#election-timeout" aria-hidden="true">#</a> election-timeout</h3><ul><li><p>类型: <code>string | toml.Duration</code></p></li><li><p>默认值: <code>1s</code></p></li><li><p>选主超时时间。</p></li></ul><h3 id="heartbeat-timeout" tabindex="-1"><a class="header-anchor" href="#heartbeat-timeout" aria-hidden="true">#</a> heartbeat-timeout</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>1s</code></li><li>心跳超时时间。</li></ul><h3 id="leader-lease-timeout" tabindex="-1"><a class="header-anchor" href="#leader-lease-timeout" aria-hidden="true">#</a> leader-lease-timeout</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: 60s`</li><li>leader租赁超时时间。</li></ul><h3 id="commit-timeout" tabindex="-1"><a class="header-anchor" href="#commit-timeout" aria-hidden="true">#</a> commit-timeout</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>50ms</code></li><li>事件提交超时时间。</li></ul><h3 id="cluster-tracing" tabindex="-1"><a class="header-anchor" href="#cluster-tracing" aria-hidden="true">#</a> cluster-tracing</h3><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>true</code></p></li><li><p>是否记录trace日志。</p></li></ul><h3 id="logging-enabled" tabindex="-1"><a class="header-anchor" href="#logging-enabled" aria-hidden="true">#</a> logging-enabled</h3><ul><li>deprecated</li></ul><h3 id="lease-duration" tabindex="-1"><a class="header-anchor" href="#lease-duration" aria-hidden="true">#</a> lease-duration</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>1m</code></li><li>租赁期限。</li></ul><h3 id="meta-version" tabindex="-1"><a class="header-anchor" href="#meta-version" aria-hidden="true">#</a> meta-version</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>2</code></li><li>meta版本。</li></ul><h3 id="split-row-threshold" tabindex="-1"><a class="header-anchor" href="#split-row-threshold" aria-hidden="true">#</a> split-row-threshold</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>10000</code></li><li>row最大行数分裂阈值。</li></ul><h3 id="imbalance-factor" tabindex="-1"><a class="header-anchor" href="#imbalance-factor" aria-hidden="true">#</a> imbalance-factor</h3><ul><li>类型: <code>float</code></li><li>默认值: <code>0.3</code></li><li>不平衡因子。</li></ul><h3 id="auth-enabled" tabindex="-1"><a class="header-anchor" href="#auth-enabled" aria-hidden="true">#</a> auth-enabled</h3><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否开启鉴权。</p></li></ul><h3 id="https-enabled" tabindex="-1"><a class="header-anchor" href="#https-enabled" aria-hidden="true">#</a> https-enabled</h3><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否开启HTTPS。</p></li></ul><h3 id="https-certificate" tabindex="-1"><a class="header-anchor" href="#https-certificate" aria-hidden="true">#</a> https-certificate</h3><ul><li><p>类型: <code> string</code></p></li><li><p>默认值: <code>&quot;&quot;</code></p></li><li><p>开启HTTPS后，证书路径。</p></li></ul><h3 id="https-private-key" tabindex="-1"><a class="header-anchor" href="#https-private-key" aria-hidden="true">#</a> https-private-key</h3><ul><li><p>类型: <code> string</code></p></li><li><p>默认值: <code>&quot;&quot;</code></p></li><li><p>开启HTTPS后，私钥路径。</p></li></ul><h3 id="ptnum-pernode" tabindex="-1"><a class="header-anchor" href="#ptnum-pernode" aria-hidden="true">#</a> ptnum-pernode</h3><ul><li><p>类型: <code> int</code></p></li><li><p>默认值: <code>1</code></p></li><li><p>每个store节点的PT的数量。</p></li></ul><h2 id="coordinator" tabindex="-1"><a class="header-anchor" href="#coordinator" aria-hidden="true">#</a> [coordinator]</h2><p>ts-sql的配置，用于和ts-store通信相关。</p><h3 id="write-timeout" tabindex="-1"><a class="header-anchor" href="#write-timeout" aria-hidden="true">#</a> write-timeout</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>120s</code></li><li>数据写入超时时间。</li></ul><h3 id="shard-writer-timeout" tabindex="-1"><a class="header-anchor" href="#shard-writer-timeout" aria-hidden="true">#</a> shard-writer-timeout</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>30s</code></li><li>数据写入shard内超时时间。</li></ul><h3 id="shard-mapper-timeout" tabindex="-1"><a class="header-anchor" href="#shard-mapper-timeout" aria-hidden="true">#</a> shard-mapper-timeout</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>10s</code></li><li>数据打散到指定shard的超时时间。</li></ul><h3 id="shard-tier" tabindex="-1"><a class="header-anchor" href="#shard-tier" aria-hidden="true">#</a> shard-tier</h3><ul><li>类型: <code>string</code></li><li>默认值: <code>warm</code></li><li>数据形态，可选值：<code>warm</code>, <code>hot</code>。</li><li><code>hot</code>模式会比较耗内存。</li></ul><h3 id="rp-limit" tabindex="-1"><a class="header-anchor" href="#rp-limit" aria-hidden="true">#</a> rp-limit</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>100</code></li><li>所有database，可以创建的retention policy的上限。</li></ul><h3 id="force-broadcast-query" tabindex="-1"><a class="header-anchor" href="#force-broadcast-query" aria-hidden="true">#</a> force-broadcast-query</h3><ul><li><p>类型: <code> bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否强制使用广播到所有节点进行查询。</p></li></ul><h3 id="time-range-limit" tabindex="-1"><a class="header-anchor" href="#time-range-limit" aria-hidden="true">#</a> time-range-limit</h3><ul><li>类型: <code> []string</code></li><li>默认值: <code>[&quot;0s&quot;, &quot;0s&quot;]</code></li><li>限制写的时间范围。比如：<code>[&quot;72h&quot;, &quot;48h&quot;]</code>，表示仅支持写入<strong>3天前到2天后之间</strong>的数据。如果是默认值，则表示不限制。</li></ul><h2 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> [http]</h2><p>ts-sql专属配置。</p>',53),G={id:"bind-address-1",tabindex:"-1"},B=e("a",{class:"header-anchor",href:"#bind-address-1","aria-hidden":"true"},"#",-1),L=e("ul",null,[e("li",null,[e("p",null,[a("类型: "),e("code",null,"string")])]),e("li",null,[e("p",null,[a("默认值: "),e("code",null,"无")])]),e("li",null,[e("p",null,[a("sql提供服务的地址，比如："),e("code",null,"127.0.0.1:8086"),a("。")])])],-1),W={id:"auth-enabled-1",tabindex:"-1"},R=e("a",{class:"header-anchor",href:"#auth-enabled-1","aria-hidden":"true"},"#",-1),N=e("ul",null,[e("li",null,[a("类型: "),e("code",null,"bool")]),e("li",null,[a("默认值: "),e("code",null,"false")]),e("li",null,"是否开启身份校验功能。")],-1),F=e("h3",{id:"weakpwd-path",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#weakpwd-path","aria-hidden":"true"},"#"),a(" weakpwd-path")],-1),M=e("li",null,[a("类型: "),e("code",null,"string")],-1),V=e("li",null,[a("默认值: "),e("code",null,"/tmp/openGemini/weakpasswd.properties")],-1),O={href:"https://github.com/openGemini/openGemini/blob/main/config/weakpasswd.properties",target:"_blank",rel:"noopener noreferrer"},j=l('<h3 id="pprof-enabled-1" tabindex="-1"><a class="header-anchor" href="#pprof-enabled-1" aria-hidden="true">#</a> pprof-enabled</h3><ul><li><p>类型: <code>bool</code></p></li><li><p>默认值: <code>false</code></p></li><li><p>是否开启go pprof服务，监控内存、CPU、goroutine等信息。</p></li></ul><h3 id="max-connection-limit" tabindex="-1"><a class="header-anchor" href="#max-connection-limit" aria-hidden="true">#</a> max-connection-limit</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>ts-sql的最大连接数限制。<code>0</code>表示不限制。</li></ul><h3 id="max-concurrent-write-limit" tabindex="-1"><a class="header-anchor" href="#max-concurrent-write-limit" aria-hidden="true">#</a> max-concurrent-write-limit</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最大写并发限制。<code>0</code>表示不限制。</li></ul><h3 id="max-enqueued-write-limit" tabindex="-1"><a class="header-anchor" href="#max-enqueued-write-limit" aria-hidden="true">#</a> max-enqueued-write-limit</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最大写队列数限制。<code>0</code>表示不限制。</li></ul><h3 id="enqueued-write-timeout" tabindex="-1"><a class="header-anchor" href="#enqueued-write-timeout" aria-hidden="true">#</a> enqueued-write-timeout</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>30s</code></li><li>写队列中，等待超时时间。</li></ul><h3 id="max-concurrent-query-limit" tabindex="-1"><a class="header-anchor" href="#max-concurrent-query-limit" aria-hidden="true">#</a> max-concurrent-query-limit</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最大读并发限制。<code>0</code>表示不限制。</li></ul><h3 id="max-enqueued-query-limit" tabindex="-1"><a class="header-anchor" href="#max-enqueued-query-limit" aria-hidden="true">#</a> max-enqueued-query-limit</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最大读队列数限制。<code>0</code>表示不限制。</li></ul><h3 id="enqueued-query-timeout" tabindex="-1"><a class="header-anchor" href="#enqueued-query-timeout" aria-hidden="true">#</a> enqueued-query-timeout</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>5m</code></li><li>读队列中，等待超时时间。</li></ul><h3 id="chunk-reader-parallel" tabindex="-1"><a class="header-anchor" href="#chunk-reader-parallel" aria-hidden="true">#</a> chunk-reader-parallel</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>单个查询，并发度数量。<code>0</code>表示不限制。</li></ul><h3 id="max-body-size" tabindex="-1"><a class="header-anchor" href="#max-body-size" aria-hidden="true">#</a> max-body-size</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>25e6</code></li><li>写入的数据body体最大限制，单位byte。<code>0</code>表示不限制。</li></ul>',20),U={id:"https-enabled-1",tabindex:"-1"},Q=e("a",{class:"header-anchor",href:"#https-enabled-1","aria-hidden":"true"},"#",-1),X=l('<ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否开启HTTPS。</li></ul><h3 id="https-certificate-1" tabindex="-1"><a class="header-anchor" href="#https-certificate-1" aria-hidden="true">#</a> https-certificate</h3><ul><li><p>类型: <code> string</code></p></li><li><p>默认值: <code>&quot;&quot;</code></p></li><li><p>开启HTTPS后，证书路径。</p></li></ul><h3 id="https-private-key-1" tabindex="-1"><a class="header-anchor" href="#https-private-key-1" aria-hidden="true">#</a> https-private-key</h3><ul><li><p>类型: <code> string</code></p></li><li><p>默认值: <code>&quot;&quot;</code></p></li><li><p>开启HTTPS后，私钥路径。</p></li></ul><h2 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> [data]</h2><p>ts-store专属配置。</p>',7),Y={id:"store-ingest-addr",tabindex:"-1"},Z=e("a",{class:"header-anchor",href:"#store-ingest-addr","aria-hidden":"true"},"#",-1),$=e("ul",null,[e("li",null,[e("p",null,[a("类型: "),e("code",null,"string")])]),e("li",null,[e("p",null,[a("默认值: "),e("code",null,"无")])]),e("li",null,[e("p",null,[a("数据接入的RPC地址，比如："),e("code",null,"127.0.0.1:8400"),a("。")])])],-1),J={id:"store-select-addr",tabindex:"-1"},K=e("a",{class:"header-anchor",href:"#store-select-addr","aria-hidden":"true"},"#",-1),ee=e("ul",null,[e("li",null,[e("p",null,[a("类型: "),e("code",null,"string")])]),e("li",null,[e("p",null,[a("默认值: "),e("code",null,"无")])]),e("li",null,[e("p",null,[a("数据查询的RPC地址，比如："),e("code",null,"127.0.0.1:8401"),a("。")])])],-1),ae={id:"store-data-dir",tabindex:"-1"},ie=e("a",{class:"header-anchor",href:"#store-data-dir","aria-hidden":"true"},"#",-1),de=e("ul",null,[e("li",null,[e("p",null,[a("类型: "),e("code",null,"string")])]),e("li",null,[e("p",null,[a("默认值: "),e("code",null,"无")])]),e("li",null,[e("p",null,"主要数据存储目录。")])],-1),le={id:"store-wal-dir",tabindex:"-1"},re=e("a",{class:"header-anchor",href:"#store-wal-dir","aria-hidden":"true"},"#",-1),te=l('<ul><li>类型: <code>string</code></li><li>默认值: <code>无</code></li><li>写前日志WAL存储目录。</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>建议和<strong>store-data-dir</strong> 不同硬盘，防止IO带宽不足。</p></div><h3 id="store-meta-dir" tabindex="-1"><a class="header-anchor" href="#store-meta-dir" aria-hidden="true">#</a> store-meta-dir</h3><div class="hint-container warning"><p class="hint-container-title">Note</p><p>deprecated</p></div><h3 id="wal-enabled" tabindex="-1"><a class="header-anchor" href="#wal-enabled" aria-hidden="true">#</a> wal-enabled</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>true</code></li><li>是否开启WAL功能。</li></ul><h3 id="wal-sync-interval" tabindex="-1"><a class="header-anchor" href="#wal-sync-interval" aria-hidden="true">#</a> wal-sync-interval</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>100ms</code></li><li>WAL定时刷盘时间周期。</li></ul><h3 id="wal-replay-parallel" tabindex="-1"><a class="header-anchor" href="#wal-replay-parallel" aria-hidden="true">#</a> wal-replay-parallel</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否并发回放WAL。</li></ul><h3 id="wal-replay-async" tabindex="-1"><a class="header-anchor" href="#wal-replay-async" aria-hidden="true">#</a> wal-replay-async</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否异步回放WAL。</li></ul><h3 id="imm-table-max-memory-percentage" tabindex="-1"><a class="header-anchor" href="#imm-table-max-memory-percentage" aria-hidden="true">#</a> imm-table-max-memory-percentage</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>10</code></li><li>immutable最大占用内存百分比。</li></ul><h3 id="write-cold-duration" tabindex="-1"><a class="header-anchor" href="#write-cold-duration" aria-hidden="true">#</a> write-cold-duration</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>5s</code></li><li>数据写冷（下盘）周期。</li></ul><h3 id="shard-mutable-size-limit" tabindex="-1"><a class="header-anchor" href="#shard-mutable-size-limit" aria-hidden="true">#</a> shard-mutable-size-limit</h3><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <a href="#memory-size">memorySize</a>/256，并强制介于 <strong>8MB - 1GB</strong> 之间。</li><li>单个shard中数据占用内存大小限制。</li></ul><h3 id="node-mutable-size-limit" tabindex="-1"><a class="header-anchor" href="#node-mutable-size-limit" aria-hidden="true">#</a> node-mutable-size-limit</h3><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <a href="#memory-size">memory-size</a>/16，并强制介于 <strong>32MB - 16GB</strong> 之间。</li><li>节点中数据占用内存大小限制。</li></ul><h3 id="max-write-hang-time" tabindex="-1"><a class="header-anchor" href="#max-write-hang-time" aria-hidden="true">#</a> max-write-hang-time</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>15s</code></li><li>数据hang住，最大时间。</li></ul><h3 id="max-concurrent-compactions" tabindex="-1"><a class="header-anchor" href="#max-concurrent-compactions" aria-hidden="true">#</a> max-concurrent-compactions</h3><ul><li>类型: <code>int</code></li><li>默认值: <a href="#cpu-num">cpu-num</a>数，并介于 <strong>2-32</strong>之间。</li><li>最大并发compaction数量。<code>0</code>表示执行上面默认值的算法。</li></ul><h3 id="compact-full-write-cold-duration" tabindex="-1"><a class="header-anchor" href="#compact-full-write-cold-duration" aria-hidden="true">#</a> compact-full-write-cold-duration</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>1h</code></li><li>下盘数据执行full compaction周期。</li></ul><h3 id="max-full-compactions" tabindex="-1"><a class="header-anchor" href="#max-full-compactions" aria-hidden="true">#</a> max-full-compactions</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>1</code></li><li>最大并发compaction数量。<code>0</code>表示执行如下算法：<a href="#cpu-num">cpu-num</a>数，并介于 <strong>1-32</strong>之间。</li></ul><h3 id="compact-throughput" tabindex="-1"><a class="header-anchor" href="#compact-throughput" aria-hidden="true">#</a> compact-throughput</h3><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <code>80m</code></li><li>compact吞吐量。</li></ul><h3 id="compact-throughput-burst" tabindex="-1"><a class="header-anchor" href="#compact-throughput-burst" aria-hidden="true">#</a> compact-throughput-burst</h3><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <code>90m</code></li><li>compact吞吐量突发。</li></ul><h3 id="compact-recovery" tabindex="-1"><a class="header-anchor" href="#compact-recovery" aria-hidden="true">#</a> compact-recovery</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否开启compact失败后自动恢复，防止进程Panic。</li></ul><h3 id="snapshot-throughput" tabindex="-1"><a class="header-anchor" href="#snapshot-throughput" aria-hidden="true">#</a> snapshot-throughput</h3><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <code>64m</code></li><li>打快照吞吐量。</li></ul><h3 id="snapshot-throughput-burst" tabindex="-1"><a class="header-anchor" href="#snapshot-throughput-burst" aria-hidden="true">#</a> snapshot-throughput-burst</h3><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <code>64m</code></li><li>打快照突发吞吐量。</li></ul><h3 id="cache-table-data-block" tabindex="-1"><a class="header-anchor" href="#cache-table-data-block" aria-hidden="true">#</a> cache-table-data-block</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否缓存查询出来的数据。</li></ul><h3 id="cache-table-meta-block" tabindex="-1"><a class="header-anchor" href="#cache-table-meta-block" aria-hidden="true">#</a> cache-table-meta-block</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否缓存查询出来的元数据。</li></ul><h3 id="enable-mmap-read" tabindex="-1"><a class="header-anchor" href="#enable-mmap-read" aria-hidden="true">#</a> enable-mmap-read</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否开启mmap。</li></ul><div class="hint-container danger"><p class="hint-container-title">Warning</p><p>目前建议不要开启，会占用比较多的内存。</p></div><h3 id="read-cache-limit" tabindex="-1"><a class="header-anchor" href="#read-cache-limit" aria-hidden="true">#</a> read-cache-limit</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>读缓存大小限制，单位byte。</li></ul><h3 id="write-concurrent-limit" tabindex="-1"><a class="header-anchor" href="#write-concurrent-limit" aria-hidden="true">#</a> write-concurrent-limit</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>写并发数限制。</li></ul><h3 id="open-shard-limit" tabindex="-1"><a class="header-anchor" href="#open-shard-limit" aria-hidden="true">#</a> open-shard-limit</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>ts-store启动同时打开shard的数量限制。<code>0</code>表示不限制。</li></ul><h3 id="readonly" tabindex="-1"><a class="header-anchor" href="#readonly" aria-hidden="true">#</a> readonly</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>ts-store只读功能是否打开。</li></ul><h3 id="downsample-write-drop" tabindex="-1"><a class="header-anchor" href="#downsample-write-drop" aria-hidden="true">#</a> downsample-write-drop</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否支持将采样丢点，仅在ts-store只读功能打开情况下可用。</li></ul><h3 id="max-wait-resource-time" tabindex="-1"><a class="header-anchor" href="#max-wait-resource-time" aria-hidden="true">#</a> max-wait-resource-time</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>0s</code></li><li>TODO</li></ul><h3 id="max-series-parallelism-num" tabindex="-1"><a class="header-anchor" href="#max-series-parallelism-num" aria-hidden="true">#</a> max-series-parallelism-num</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>时间线并发度最大限制。<code>0</code>表述不限制。</li></ul><h3 id="max-shards-parallelism-num" tabindex="-1"><a class="header-anchor" href="#max-shards-parallelism-num" aria-hidden="true">#</a> max-shards-parallelism-num</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>shard并发度最大限制。<code>0</code>表述不限制。</li></ul><h3 id="chunk-reader-threshold" tabindex="-1"><a class="header-anchor" href="#chunk-reader-threshold" aria-hidden="true">#</a> chunk-reader-threshold</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>chunk reader阈值。<code>0</code>表述不限制。</li></ul><h3 id="min-chunk-reader-concurrency" tabindex="-1"><a class="header-anchor" href="#min-chunk-reader-concurrency" aria-hidden="true">#</a> min-chunk-reader-concurrency</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最小chunk reader并发度。<code>0</code>表述不限制。</li></ul><h3 id="min-shards-concurrency" tabindex="-1"><a class="header-anchor" href="#min-shards-concurrency" aria-hidden="true">#</a> min-shards-concurrency</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最小shard并发度。<code>0</code>表述不限制。</li></ul><h3 id="max-downsample-task-concurrency" tabindex="-1"><a class="header-anchor" href="#max-downsample-task-concurrency" aria-hidden="true">#</a> max-downsample-task-concurrency</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>0</code></li><li>最大将采样任务并发度。<code>0</code>表述不限制。</li></ul><h2 id="data-ops-monitor" tabindex="-1"><a class="header-anchor" href="#data-ops-monitor" aria-hidden="true">#</a> [data.ops-monitor]</h2><p>可忽略此配置，内部服务化专属。</p>',71),oe={id:"store-http-addr-addr-8402",tabindex:"-1"},ne=e("a",{class:"header-anchor",href:"#store-http-addr-addr-8402","aria-hidden":"true"},"#",-1),ce=l('<h3 id="auth-enabled-false" tabindex="-1"><a class="header-anchor" href="#auth-enabled-false" aria-hidden="true">#</a> auth-enabled = false</h3><h3 id="store-https-enabled-false" tabindex="-1"><a class="header-anchor" href="#store-https-enabled-false" aria-hidden="true">#</a> store-https-enabled = false</h3><h3 id="store-https-certificate" tabindex="-1"><a class="header-anchor" href="#store-https-certificate" aria-hidden="true">#</a> store-https-certificate = &quot;&quot;</h3><h2 id="retention" tabindex="-1"><a class="header-anchor" href="#retention" aria-hidden="true">#</a> [retention]</h2><p>retention policy配置。</p><h3 id="enabled-true" tabindex="-1"><a class="header-anchor" href="#enabled-true" aria-hidden="true">#</a> enabled = true</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>true</code></li><li>是否开启。</li></ul><h3 id="check-interval-30m" tabindex="-1"><a class="header-anchor" href="#check-interval-30m" aria-hidden="true">#</a> check-interval = &quot;30m&quot;</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>30m</code></li><li>检测周期。</li></ul><h2 id="downsample" tabindex="-1"><a class="header-anchor" href="#downsample" aria-hidden="true">#</a> [downsample]</h2><p>将采样配置。</p><h3 id="enable-true" tabindex="-1"><a class="header-anchor" href="#enable-true" aria-hidden="true">#</a> enable = true</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>true</code></li><li>是否开启。</li></ul><h3 id="check-interval-30m-1" tabindex="-1"><a class="header-anchor" href="#check-interval-30m-1" aria-hidden="true">#</a> check-interval = &quot;30m&quot;</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>30m</code></li><li>检测周期。</li></ul><h2 id="logging" tabindex="-1"><a class="header-anchor" href="#logging" aria-hidden="true">#</a> [logging]</h2><p>日志配置。</p><h3 id="format" tabindex="-1"><a class="header-anchor" href="#format" aria-hidden="true">#</a> format</h3><ul><li>类型: <code>string</code></li><li>默认值: <code>auto</code></li><li>输出格式样式。</li></ul><h3 id="level" tabindex="-1"><a class="header-anchor" href="#level" aria-hidden="true">#</a> level</h3><ul><li>类型: <code>string</code></li><li>默认值: <code>info</code></li><li>日志记录的级别。可选值：<code>debug</code>, <code>info</code>, <code>warn</code>, <code>error</code>, <code>panic</code>等</li></ul>',21),he={id:"path",tabindex:"-1"},se=e("a",{class:"header-anchor",href:"#path","aria-hidden":"true"},"#",-1),ue=l(`<ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>日志输出目录。</li></ul><h3 id="max-size" tabindex="-1"><a class="header-anchor" href="#max-size" aria-hidden="true">#</a> max-size</h3><ul><li>类型: <code>string | toml.Size</code></li><li>默认值: <code>64m</code></li><li>日志单个文件最大大小。</li></ul><h3 id="max-num" tabindex="-1"><a class="header-anchor" href="#max-num" aria-hidden="true">#</a> max-num</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>16</code></li><li>日志最多保存的文件数。</li></ul><h3 id="max-age" tabindex="-1"><a class="header-anchor" href="#max-age" aria-hidden="true">#</a> max-age</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>16</code></li><li>日志最多保存的周期，单位天。</li></ul><h3 id="compress-enabled-true" tabindex="-1"><a class="header-anchor" href="#compress-enabled-true" aria-hidden="true">#</a> compress-enabled = true</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>true</code></li><li>是否压缩。</li></ul><h2 id="tls" tabindex="-1"><a class="header-anchor" href="#tls" aria-hidden="true">#</a> [tls]</h2><p>tsl配置。</p><h3 id="min-version" tabindex="-1"><a class="header-anchor" href="#min-version" aria-hidden="true">#</a> min-version</h3><ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>tls最小版本。建议：&quot;TLS1.2&quot;</li></ul><h3 id="ciphers" tabindex="-1"><a class="header-anchor" href="#ciphers" aria-hidden="true">#</a> ciphers</h3><ul><li>类型: <code>[]string</code></li><li>默认值: 无</li><li>ciphers。建议:</li></ul><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">ciphers</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="monitor" tabindex="-1"><a class="header-anchor" href="#monitor" aria-hidden="true">#</a> [monitor]</h2><p>ts-sql, ts-store, ts-meta 监控相关配置。</p><h3 id="pushers" tabindex="-1"><a class="header-anchor" href="#pushers" aria-hidden="true">#</a> pushers</h3><ul><li>类型: <code>string</code></li><li>默认值: <code>&quot;&quot;</code></li><li>监控指标推送方式，可选值：<code>http</code>, <code>file</code>。</li></ul><h3 id="store-enabled" tabindex="-1"><a class="header-anchor" href="#store-enabled" aria-hidden="true">#</a> store-enabled</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>是否开启monitor数据存储。</li></ul><h3 id="store-database" tabindex="-1"><a class="header-anchor" href="#store-database" aria-hidden="true">#</a> store-database</h3><ul><li>类型: <code>string</code></li><li>默认值: <code>_internal</code></li><li>监控指标保存到database名称。仅在<code>pushers=&quot;http&quot;</code>可用。</li></ul><h3 id="store-interval" tabindex="-1"><a class="header-anchor" href="#store-interval" aria-hidden="true">#</a> store-interval</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>10s</code></li><li>数据保存周期。</li></ul><h3 id="store-path" tabindex="-1"><a class="header-anchor" href="#store-path" aria-hidden="true">#</a> store-path</h3><ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>监控指标保存路径和文件名称模板。仅在<code>pushers=&quot;file&quot;</code>可用。比如：<code>/tmp/openGemini/metric/metric.data</code></li></ul><h3 id="compress" tabindex="-1"><a class="header-anchor" href="#compress" aria-hidden="true">#</a> compress</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>false</code></li><li>监控指标保存到文件是否压缩。仅在<code>pushers=&quot;file&quot;</code>可用。</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>目前不建议打开</p></div><h3 id="http-endpoint" tabindex="-1"><a class="header-anchor" href="#http-endpoint" aria-hidden="true">#</a> http-endpoint</h3><ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>监控指标通过http发送到的endpoint。仅在<code>pushers=&quot;http&quot;</code>可用。比如：<code>127.0.0.1:8086</code></li></ul><h3 id="username" tabindex="-1"><a class="header-anchor" href="#username" aria-hidden="true">#</a> username = &quot;&quot;</h3><ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>监控指标通过http发送到的endpoint的用户名。仅在<code>pushers=&quot;http&quot;</code>可用。</li></ul><h3 id="password" tabindex="-1"><a class="header-anchor" href="#password" aria-hidden="true">#</a> password = &quot;&quot;</h3><ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>监控指标通过http发送到的endpoint的密码。仅在<code>pushers=&quot;http&quot;</code>可用。</li></ul><h2 id="gossip" tabindex="-1"><a class="header-anchor" href="#gossip" aria-hidden="true">#</a> [gossip]</h2><p>ts-store，ts-meta的gossip配置。</p><h3 id="enabled-true-1" tabindex="-1"><a class="header-anchor" href="#enabled-true-1" aria-hidden="true">#</a> enabled = true</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>集群:true，单机:false</code></li><li>是否开启gossip。</li></ul><h3 id="log-enabled" tabindex="-1"><a class="header-anchor" href="#log-enabled" aria-hidden="true">#</a> log-enabled</h3><ul><li>类型: <code>bool</code></li><li>默认值: <code>true</code></li><li>是否开启gossip日志输出。</li></ul><h3 id="bind-address-2" tabindex="-1"><a class="header-anchor" href="#bind-address-2" aria-hidden="true">#</a> bind-address</h3><ul><li>类型: <code>string</code></li><li>默认值: 无</li><li>gossip绑定的地址。比如: <code>127.0.0.1</code></li></ul><div class="hint-container danger"><p class="hint-container-title">Warning</p><p>集群必填</p></div><h3 id="store-bind-port" tabindex="-1"><a class="header-anchor" href="#store-bind-port" aria-hidden="true">#</a> store-bind-port</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>8011</code></li><li>ts-store端的gossip，绑定的端口。比如：<code>8011</code></li></ul><h3 id="meta-bind-port" tabindex="-1"><a class="header-anchor" href="#meta-bind-port" aria-hidden="true">#</a> meta-bind-port</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>8010</code></li><li>ts-meta端的gossip，绑定的端口。比如：<code>8010</code></li></ul><h3 id="prob-interval" tabindex="-1"><a class="header-anchor" href="#prob-interval" aria-hidden="true">#</a> prob-interval</h3><ul><li>类型: <code>string | toml.Duration</code></li><li>默认值: <code>1s</code></li><li>探测周期。</li></ul><h3 id="suspicion-mult" tabindex="-1"><a class="header-anchor" href="#suspicion-mult" aria-hidden="true">#</a> suspicion-mult</h3><ul><li>类型: <code>int</code></li><li>默认值: <code>4</code></li><li>怀疑多个。</li></ul><h3 id="members" tabindex="-1"><a class="header-anchor" href="#members" aria-hidden="true">#</a> members</h3><ul><li><p>类型: <code>[]string</code></p></li><li><p>默认值: <code>无</code></p></li><li><p>META的gossip地址。比如：<code>[&quot;127.0.0.1:8010&quot;, &quot;127.0.0.2:8010&quot;, &quot;127.0.0.3:8010&quot;]</code></p></li></ul><div class="hint-container danger"><p class="hint-container-title">Warning</p><p>集群必填</p></div><h2 id="spdy" tabindex="-1"><a class="header-anchor" href="#spdy" aria-hidden="true">#</a> [spdy]</h2><p>spdy专用配置。</p><h3 id="recv-window-size-8" tabindex="-1"><a class="header-anchor" href="#recv-window-size-8" aria-hidden="true">#</a> recv-window-size = 8</h3><h3 id="concurrent-accept-session-4096" tabindex="-1"><a class="header-anchor" href="#concurrent-accept-session-4096" aria-hidden="true">#</a> concurrent-accept-session = 4096</h3><h3 id="open-session-timeout-5m" tabindex="-1"><a class="header-anchor" href="#open-session-timeout-5m" aria-hidden="true">#</a> open-session-timeout = &quot;5m&quot;</h3><h3 id="session-select-timeout-5m" tabindex="-1"><a class="header-anchor" href="#session-select-timeout-5m" aria-hidden="true">#</a> session-select-timeout = &quot;5m&quot;</h3><h3 id="data-ack-timeout-10s" tabindex="-1"><a class="header-anchor" href="#data-ack-timeout-10s" aria-hidden="true">#</a> data-ack-timeout = &quot;10s&quot;</h3><h3 id="tcp-dial-timeout-5s" tabindex="-1"><a class="header-anchor" href="#tcp-dial-timeout-5s" aria-hidden="true">#</a> tcp-dial-timeout = &quot;5s&quot;</h3><h3 id="tls-enable-false" tabindex="-1"><a class="header-anchor" href="#tls-enable-false" aria-hidden="true">#</a> tls-enable = false</h3><h3 id="tls-insecure-skip-verify-false" tabindex="-1"><a class="header-anchor" href="#tls-insecure-skip-verify-false" aria-hidden="true">#</a> tls-insecure-skip-verify = false</h3><h3 id="tls-client-auth-false" tabindex="-1"><a class="header-anchor" href="#tls-client-auth-false" aria-hidden="true">#</a> tls-client-auth = false</h3><h3 id="tls-certificate" tabindex="-1"><a class="header-anchor" href="#tls-certificate" aria-hidden="true">#</a> tls-certificate = &quot;&quot;</h3><h3 id="tls-private-key" tabindex="-1"><a class="header-anchor" href="#tls-private-key" aria-hidden="true">#</a> tls-private-key = &quot;&quot;</h3><h3 id="tls-server-name" tabindex="-1"><a class="header-anchor" href="#tls-server-name" aria-hidden="true">#</a> tls-server-name = &quot;&quot;</h3><h3 id="conn-pool-size-4" tabindex="-1"><a class="header-anchor" href="#conn-pool-size-4" aria-hidden="true">#</a> conn-pool-size = 4</h3><h3 id="tls-client-certificate" tabindex="-1"><a class="header-anchor" href="#tls-client-certificate" aria-hidden="true">#</a> tls-client-certificate = &quot;&quot;</h3><h3 id="tls-client-private-key" tabindex="-1"><a class="header-anchor" href="#tls-client-private-key" aria-hidden="true">#</a> tls-client-private-key = &quot;&quot;</h3><h3 id="tls-ca-root" tabindex="-1"><a class="header-anchor" href="#tls-ca-root" aria-hidden="true">#</a> tls-ca-root = &quot;&quot;</h3><h2 id="castor" tabindex="-1"><a class="header-anchor" href="#castor" aria-hidden="true">#</a> [castor]</h2><p>castor专用配置。</p><h3 id="enabled-false" tabindex="-1"><a class="header-anchor" href="#enabled-false" aria-hidden="true">#</a> enabled = false</h3><h3 id="pyworker-addr-127-0-0-1-6666" tabindex="-1"><a class="header-anchor" href="#pyworker-addr-127-0-0-1-6666" aria-hidden="true">#</a> pyworker-addr = [&quot;127.0.0.1:6666&quot;]</h3><h3 id="connect-pool-size-30" tabindex="-1"><a class="header-anchor" href="#connect-pool-size-30" aria-hidden="true">#</a> connect-pool-size = 30</h3><h3 id="result-wait-timeout-10-unit-second" tabindex="-1"><a class="header-anchor" href="#result-wait-timeout-10-unit-second" aria-hidden="true">#</a> result-wait-timeout = 10 # unit: second</h3><h2 id="castor-detect" tabindex="-1"><a class="header-anchor" href="#castor-detect" aria-hidden="true">#</a> [castor.detect]</h2><h3 id="algorithm" tabindex="-1"><a class="header-anchor" href="#algorithm" aria-hidden="true">#</a> algorithm</h3><p>[&#39;BatchDIFFERENTIATEAD&#39;,&#39;DIFFERENTIATEAD&#39;,&#39;IncrementalAD&#39;,&#39;ThresholdAD&#39;,&#39;ValueChangeAD&#39;]</p><h3 id="config-filename-detect-base" tabindex="-1"><a class="header-anchor" href="#config-filename-detect-base" aria-hidden="true">#</a> config_filename = [&#39;detect_base&#39;]</h3><h2 id="castor-fit-detect" tabindex="-1"><a class="header-anchor" href="#castor-fit-detect" aria-hidden="true">#</a> [castor.fit_detect]</h2><h3 id="algorithm-1" tabindex="-1"><a class="header-anchor" href="#algorithm-1" aria-hidden="true">#</a> algorithm</h3><p>[&#39;BatchDIFFERENTIATEAD&#39;,&#39;DIFFERENTIATEAD&#39;,&#39;IncrementalAD&#39;,&#39;ThresholdAD&#39;,&#39;ValueChangeAD&#39;]</p><h3 id="config-filename-detect-base-1" tabindex="-1"><a class="header-anchor" href="#config-filename-detect-base-1" aria-hidden="true">#</a> config_filename = [&#39;detect_base&#39;]</h3><h2 id="sherlock" tabindex="-1"><a class="header-anchor" href="#sherlock" aria-hidden="true">#</a> [sherlock]</h2><p>sherlock，自动导出pprof文件功能相关配置。</p><h3 id="sherlock-enable-false" tabindex="-1"><a class="header-anchor" href="#sherlock-enable-false" aria-hidden="true">#</a> sherlock-enable = false</h3><h3 id="collect-interval-10s" tabindex="-1"><a class="header-anchor" href="#collect-interval-10s" aria-hidden="true">#</a> collect-interval = &quot;10s&quot;</h3><h3 id="cpu-max-limit-95" tabindex="-1"><a class="header-anchor" href="#cpu-max-limit-95" aria-hidden="true">#</a> cpu-max-limit = 95</h3><h3 id="dump-path-tmp" tabindex="-1"><a class="header-anchor" href="#dump-path-tmp" aria-hidden="true">#</a> dump-path = &quot;/tmp&quot;</h3><h2 id="sherlock-cpu" tabindex="-1"><a class="header-anchor" href="#sherlock-cpu" aria-hidden="true">#</a> [sherlock.cpu]</h2><h3 id="enable-false" tabindex="-1"><a class="header-anchor" href="#enable-false" aria-hidden="true">#</a> enable = false</h3><h3 id="min-30" tabindex="-1"><a class="header-anchor" href="#min-30" aria-hidden="true">#</a> min = 30</h3><h3 id="diff-25" tabindex="-1"><a class="header-anchor" href="#diff-25" aria-hidden="true">#</a> diff = 25</h3><h3 id="abs-70" tabindex="-1"><a class="header-anchor" href="#abs-70" aria-hidden="true">#</a> abs = 70</h3><h3 id="cool-down-10m" tabindex="-1"><a class="header-anchor" href="#cool-down-10m" aria-hidden="true">#</a> cool-down = &quot;10m&quot;</h3><h2 id="sherlock-memory" tabindex="-1"><a class="header-anchor" href="#sherlock-memory" aria-hidden="true">#</a> [sherlock.memory]</h2><h3 id="enable-false-1" tabindex="-1"><a class="header-anchor" href="#enable-false-1" aria-hidden="true">#</a> enable = false</h3><h3 id="min-25" tabindex="-1"><a class="header-anchor" href="#min-25" aria-hidden="true">#</a> min = 25</h3><h3 id="diff-25-1" tabindex="-1"><a class="header-anchor" href="#diff-25-1" aria-hidden="true">#</a> diff = 25</h3><h3 id="abs-80" tabindex="-1"><a class="header-anchor" href="#abs-80" aria-hidden="true">#</a> abs = 80</h3><h3 id="cool-down-10m-1" tabindex="-1"><a class="header-anchor" href="#cool-down-10m-1" aria-hidden="true">#</a> cool-down = &quot;10m&quot;</h3><h2 id="sherlock-goroutine" tabindex="-1"><a class="header-anchor" href="#sherlock-goroutine" aria-hidden="true">#</a> [sherlock.goroutine]</h2><h3 id="enable-false-2" tabindex="-1"><a class="header-anchor" href="#enable-false-2" aria-hidden="true">#</a> enable = false</h3><h3 id="min-10000" tabindex="-1"><a class="header-anchor" href="#min-10000" aria-hidden="true">#</a> min = 10000</h3><h3 id="diff-20" tabindex="-1"><a class="header-anchor" href="#diff-20" aria-hidden="true">#</a> diff = 20</h3><h3 id="abs-20000" tabindex="-1"><a class="header-anchor" href="#abs-20000" aria-hidden="true">#</a> abs = 20000</h3><h3 id="max-100000" tabindex="-1"><a class="header-anchor" href="#max-100000" aria-hidden="true">#</a> max = 100000</h3><h3 id="cool-down-30m" tabindex="-1"><a class="header-anchor" href="#cool-down-30m" aria-hidden="true">#</a> cool-down = &quot;30m&quot;</h3>`,114);function pe(t,me){const d=r("Badge"),o=r("ExternalLinkIcon");return c(),h("div",null,[p,m,b,f,e("h3",x,[g,a(" meta-join "),i(d,{text:"必填",type:"danger"})]),_,e("h3",q,[y,a(" cpu-num "),i(d,{text:"建议",type:"tip"})]),w,e("h3",k,[v,a(" bind-address "),i(d,{text:"必填",type:"danger"})]),D,e("h3",T,[z,a(" http-bind-address "),i(d,{text:"必填",type:"danger"})]),S,e("h3",A,[E,a(" rpc-bind-address "),i(d,{text:"必填",type:"danger"})]),C,e("h3",H,[I,a(" dir "),i(d,{text:"必填",type:"danger"})]),P,e("h3",G,[B,a(" bind-address "),i(d,{text:"必填",type:"danger"})]),L,e("h3",W,[R,a(" auth-enabled "),i(d,{text:"建议",type:"tip"})]),N,F,e("ul",null,[M,V,e("li",null,[a("此路径是常见弱密码的文件路径，"),e("a",O,[a("这里"),i(o)]),a("提供了常用的弱密码，仅供参考。")])]),j,e("h3",U,[Q,a(" https-enabled "),i(d,{text:"建议",type:"tip"})]),X,e("h3",Y,[Z,a(" store-ingest-addr "),i(d,{text:"必填",type:"danger"})]),$,e("h3",J,[K,a(" store-select-addr "),i(d,{text:"必填",type:"danger"})]),ee,e("h3",ae,[ie,a(" store-data-dir "),i(d,{text:"必填",type:"danger"})]),de,e("h3",le,[re,a(" store-wal-dir "),i(d,{text:"必填",type:"danger"})]),te,e("h3",oe,[ne,a(' store-http-addr = "'+s(t.addr)+':8402"',1)]),ce,e("h3",he,[se,a(" path "),i(d,{text:"必填",type:"danger"})]),ue])}const fe=n(u,[["render",pe],["__file","configurations.html.vue"]]);export{fe as default};
