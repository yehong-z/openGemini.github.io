import{_ as o,X as t,Y as i,Z as e,a1 as n,$ as s,a3 as l,C as r}from"./framework-a4aa538b.js";const c={},d=e("h1",{id:"install-golang",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#install-golang","aria-hidden":"true"},"#"),n(" Install Golang")],-1),h=e("p",null,"To build openGemini from source code, you need to install Go in your development environment first. If Go is not installed yet, you can follow the instructions in this document for installation.",-1),u=e("h1",{id:"install-go-1-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#install-go-1-18","aria-hidden":"true"},"#"),n(" Install Go 1.18")],-1),p={href:"https://golang.org/dl/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"},m=e("h1",{id:"manage-the-go-toolchain-using-gvm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#manage-the-go-toolchain-using-gvm","aria-hidden":"true"},"#"),n(" Manage the Go toolchain using gvm")],-1),v={href:"https://github.com/moovweb/gvm",target:"_blank",rel:"noopener noreferrer"},b=l(`<p>To install gvm, run the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-S</span> <span class="token parameter variable">-L</span> https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer <span class="token operator">|</span> <span class="token function">sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Once you have gvm installed, you can use it to manage multiple different Go compilers with different versions. Let&#39;s install Go 1.18 and set it as default:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gvm <span class="token function">install</span> go1.18
gvm use go1.18 <span class="token parameter variable">--default</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, you can type go version in the shell to verify the installation:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go version
<span class="token comment"># OUTPUT:</span>
<span class="token comment"># go version go1.18 linux/amd64</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the next chapter, you will learn how to obtain the openGemini source code and how to build it.</p>`,7);function _(f,k){const a=r("ExternalLinkIcon");return t(),i("div",null,[d,h,u,e("p",null,[n("Currently, openGemini uses Go 1.18+ to compile the code. To install Go 1.18, go to "),e("a",p,[n("Go's download page"),s(a)]),n(", choose version 1.18, and then follow the "),e("a",g,[n("installation instructions"),s(a)]),n(".")]),m,e("p",null,[n("If you are using Linux or MacOS, you can manage Go versions with "),e("a",v,[n("Go Version Manager (gvm)"),s(a)]),n(" easily.")]),b])}const G=o(c,[["render",_],["__file","install_go.html.vue"]]);export{G as default};
