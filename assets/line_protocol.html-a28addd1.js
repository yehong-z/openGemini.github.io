import{_ as i,X as d,Y as r,Z as e,a1 as a,$ as t,a0 as p,a3 as s,C as n}from"./framework-a4aa538b.js";const c={},u=s(`<h1 id="常规行协议定义" tabindex="-1"><a class="header-anchor" href="#常规行协议定义" aria-hidden="true">#</a> 常规行协议定义</h1><p>line protocol 是一种基于文本的格式，用于将points 写入 openGemini</p><blockquote><p>采用InfluxDB相同的line protocol</p></blockquote><h2 id="line-protocol语法" tabindex="-1"><a class="header-anchor" href="#line-protocol语法" aria-hidden="true">#</a> line protocol语法</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;measurement&gt;[,&lt;tag_key&gt;=&lt;tag_value&gt;[,&lt;tag_key&gt;=&lt;tag_value&gt;]] &lt;field_key&gt;=&lt;field_value&gt;[,&lt;field_key&gt;=&lt;field_value&gt;] [&lt;timestamp&gt;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Line protocol 接受换行符<code>\\n </code>,并且区分空格</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Line protocol 不支持tag value 或filed value 中的换行符。</p></div><h3 id="语法描述" tabindex="-1"><a class="header-anchor" href="#语法描述" aria-hidden="true">#</a> 语法描述</h3><p>line protocol 将数据的measurement,tag set,field set和timestamp 通知给openGemini.</p>`,9),m=e("th",{style:{"text-align":"left"}},"组件",-1),g=e("th",{style:{"text-align":"left"}},"可选/必须",-1),h=e("th",{style:{"text-align":"left"}},"描述",-1),k={style:{"text-align":"left"}},v=e("br",null,null,-1),y=e("tbody",null,[e("tr",null,[e("td",{style:{"text-align":"left"}},"Measurement"),e("td",{style:{"text-align":"left"}},"需要"),e("td",{style:{"text-align":"left"}},"测量名称. 每一个point 接受一次 measurement"),e("td",{style:{"text-align":"left"}},"字符串")]),e("tr",null,[e("td",{style:{"text-align":"left"}},"Tag set"),e("td",{style:{"text-align":"left"}},"可选"),e("td",{style:{"text-align":"left"}},"该point 所有Tags。 key-value 标记键值对。"),e("td",{style:{"text-align":"left"}},"Tag keys和 tag values 都是字符串")]),e("tr",null,[e("td",{style:{"text-align":"left"}},"Field set"),e("td",{style:{"text-align":"left"}},"需要 Points 点必须至少具有一个字段."),e("td",{style:{"text-align":"left"}},"该point 所有 Fields。 key-value 键值对。"),e("td",{style:{"text-align":"left"}},"Field keys字段键是字符串. Field values字段值可以是浮点数, 整数,字符串,或者 Booleans.")]),e("tr",null,[e("td",{style:{"text-align":"left"}},"Timestamp"),e("td",{style:{"text-align":"left"}},"可选. 如果时间戳不包含在该point中，openGemini数据库将使用服务器的本地纳秒时间 （UTC时间）"),e("td",{style:{"text-align":"left"}},"数据point的时间戳"),e("td",{style:{"text-align":"left"}},"Unix 纳秒时间戳")])],-1),f={class:"hint-container tip"},b=e("p",{class:"hint-container-title"},"性能提示",-1),x={href:"http://golang.org/pkg/bytes/#Compare",target:"_blank",rel:"noopener noreferrer"},q=e("li",null,"为了显著提高压缩性能，请尽可能使用最粗略的时间戳。",-1),_=e("li",null,"使用网络时间协议(NTP)来同步主机之间的时间。openGemini使用主机的本地时间(以世界协调时表示)为数据分配时间戳。如果主机的时钟与NTP不同步，主机写入openGemini的数据可能会有不准确的时间戳。",-1),w=s(`<h2 id="data-types" tabindex="-1"><a class="header-anchor" href="#data-types" aria-hidden="true">#</a> Data types</h2><table><thead><tr><th style="text-align:left;">数据类型</th><th style="text-align:left;">元素</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">Float</td><td style="text-align:left;">Field values（字段值）</td><td style="text-align:left;">默认数字类型。IEEE-754 64位浮点数(NaN或+/- Inf除外)。例子:<code>1</code>，<code> 1.0</code>, <code>1.e+78 </code>，<code> 1</code>, <code>E+78 </code>。</td></tr><tr><td style="text-align:left;">Integer</td><td style="text-align:left;">Field values（字段值）</td><td style="text-align:left;">有符号64位整数(-9223372036854775808至9223372036854775807)。请指定一个在数字后面带有**<code>i</code>**的整数。示例:<code> 2i</code></td></tr><tr><td style="text-align:left;">String</td><td style="text-align:left;">Measurements, tag keys, tag values, field keys, field values</td><td style="text-align:left;">长度限制64KB.</td></tr><tr><td style="text-align:left;">Boolean</td><td style="text-align:left;">Field values</td><td style="text-align:left;">存储TRUE或FASE值.<br><br><code>true</code>的写入语法有:<code>[t, T, true, True, TRUE]</code>.<br><br><code>false</code>的写语法有:<code>[f, F, false, False, FALSE]</code></td></tr><tr><td style="text-align:left;">Timestamp</td><td style="text-align:left;">Timestamps</td><td style="text-align:left;">Unix 纳秒级时间戳. 使用precision指定替代精度，最小有效时间戳为-9223372036854775806<code>或</code>1677-09-21T00:12:43.145224194Z<code>. 最大有效时间戳为 </code>9223372036854775806<code>或</code>2262-04-11T23:47:16.854775806Z\`.</td></tr></tbody></table><p><strong>用于写入和查询的boolean语法</strong></p><p>数据写入和数据查询可接受 Boolean 语法不同。查询仅可接受<code>true</code> or <code>false</code>。</p><p><strong>字段类型冲突</strong></p><p>在measurement中, field&#39;s type 不能相同。</p><h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h3><h4 id="将field-value-1-234456e-78作为浮点数写入-opengemini" tabindex="-1"><a class="header-anchor" href="#将field-value-1-234456e-78作为浮点数写入-opengemini" aria-hidden="true">#</a> 将field value <code>-1.234456e+78</code>作为浮点数写入 openGemini</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> mymeas <span class="token keyword">value</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">1.234456</span>e<span class="token operator">+</span><span class="token number">78</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>openGemini 支持科学计数法指定的field value.</p><h4 id="将field-value-1-0-作为浮点数写入-opengemini" tabindex="-1"><a class="header-anchor" href="#将field-value-1-0-作为浮点数写入-opengemini" aria-hidden="true">#</a> 将field value 1.0 作为浮点数写入 openGemini</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> mymeas <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">1.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="将field-value-1作为浮点数写入-opengemini" tabindex="-1"><a class="header-anchor" href="#将field-value-1作为浮点数写入-opengemini" aria-hidden="true">#</a> 将field value <code>1</code>作为浮点数写入 openGemini</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> mymeas <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="将field-value-1作为浮点数写入-opengemini-1" tabindex="-1"><a class="header-anchor" href="#将field-value-1作为浮点数写入-opengemini-1" aria-hidden="true">#</a> 将field value 1作为浮点数写入 openGemini</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> mymeas <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">1</span>i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="将filed-value-stringing-along-作为字符串写入-opengemini" tabindex="-1"><a class="header-anchor" href="#将filed-value-stringing-along-作为字符串写入-opengemini" aria-hidden="true">#</a> 将filed value <code>stringing along</code> 作为字符串写入 openGemini</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> mymeas <span class="token keyword">value</span><span class="token operator">=</span><span class="token string">&quot;stringing along&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>始终用双引号将字符串 field value引起来。</p><h4 id="将filed-value-true作为boolean写入opengemini" tabindex="-1"><a class="header-anchor" href="#将filed-value-true作为boolean写入opengemini" aria-hidden="true">#</a> 将filed value <code>true</code>作为boolean写入openGemini</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> mymeas <span class="token keyword">value</span><span class="token operator">=</span><span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不要引用以下语句将<code>true</code>字符串field value 写入openGemini：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> mymeas <span class="token keyword">value</span><span class="token operator">=</span><span class="token string">&quot;true&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="引用、特殊字符和其他命名准则" tabindex="-1"><a class="header-anchor" href="#引用、特殊字符和其他命名准则" aria-hidden="true">#</a> 引用、特殊字符和其他命名准则</h3><table><thead><tr><th style="text-align:left;">元素</th><th style="text-align:left;">双引号</th><th style="text-align:left;">单引号</th></tr></thead><tbody><tr><td style="text-align:left;">Timestamp</td><td style="text-align:left;">从不</td><td style="text-align:left;">从不</td></tr><tr><td style="text-align:left;">Measurements, tag keys, tag values, field keys</td><td style="text-align:left;">从不*</td><td style="text-align:left;">从不*</td></tr><tr><td style="text-align:left;">Field values</td><td style="text-align:left;">双引号字符串字段值，不要用引号引上浮点数，整数或者Booleans</td><td style="text-align:left;">从不</td></tr></tbody></table><p>* openGemini line protocol 允许用户使用双引号和单引号measurement名称，tag keys，tag values和field key。但是，它将假定双引号或单引号是名称，key 或values的一部分。这会使查询语法复杂化（请参见下面的示例）</p><h4 id="例子-1" tabindex="-1"><a class="header-anchor" href="#例子-1" aria-hidden="true">#</a> 例子</h4><h5 id="无效的line-protocol-双引号时间戳" tabindex="-1"><a class="header-anchor" href="#无效的line-protocol-双引号时间戳" aria-hidden="true">#</a> 无效的line protocol-双引号时间戳</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token string">&quot;http://localhost:8086/write?db=NOAA_water_database&quot;</span> --data-binary <span class="token string">&#39;mymeas value=9 &quot;1466625759000000000&quot;&#39;</span>
<span class="token punctuation">{</span><span class="token string">&quot;error&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;cannot parse timestamp <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token entity" title="\\\\">\\\\</span><span class="token entity" title="\\&quot;">\\&quot;</span>1466625759000000000<span class="token entity" title="\\\\">\\\\</span><span class="token entity" title="\\&quot;">\\&quot;</span><span class="token entity" title="\\&quot;">\\&quot;</span>: bad timestamp&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>双重引用（或单引号）时间戳会产生bad time stamp错误。</p><h5 id="语义错误-双引号表示boolean" tabindex="-1"><a class="header-anchor" href="#语义错误-双引号表示boolean" aria-hidden="true">#</a> 语义错误 - 双引号表示Boolean</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> mymeas <span class="token keyword">value</span><span class="token operator">=</span><span class="token string">&quot;true&quot;</span>
<span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> FIELD <span class="token keyword">KEYS</span> <span class="token keyword">FROM</span> <span class="token string">&quot;mymeas&quot;</span>
name: mymeas
<span class="token comment">------------</span>
fieldKey	 fieldType
<span class="token keyword">value</span>		   string
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>openGemini 假设所有双引号field values都是字符串</p><h5 id="semantic-error-double-quote-a-measurement-name" tabindex="-1"><a class="header-anchor" href="#semantic-error-double-quote-a-measurement-name" aria-hidden="true">#</a> Semantic error - Double quote a measurement name</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> <span class="token string">&quot;mymeas&quot;</span> <span class="token keyword">value</span><span class="token operator">=</span><span class="token number">200</span>
<span class="token operator">&gt;</span> <span class="token keyword">SHOW</span> MEASUREMENTS
name: measurements
<span class="token comment">------------------</span>
name
<span class="token string">&quot;mymeas&quot;</span>
<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> mymeas
<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token string">&quot;mymeas&quot;</span>
<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token string">&quot;\\&quot;mymeas\\&quot;&quot;</span>
name: <span class="token string">&quot;mymeas&quot;</span>
<span class="token comment">--------------</span>
<span class="token keyword">time</span>				                        <span class="token keyword">value</span>
<span class="token number">2016</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">14</span>T20:<span class="token number">36</span>:<span class="token number">21.836131014</span>Z	 <span class="token number">200</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特殊字符" tabindex="-1"><a class="header-anchor" href="#特殊字符" aria-hidden="true">#</a> 特殊字符</h3><p>您必须使用反斜杠字符\\来转义下列特殊字符：</p><ul><li>在字符串field value中，必须转义: <ul><li>双引号</li><li>反斜杠字符</li></ul></li></ul><p>例如，\\ &quot;转义双引号。</p><blockquote><p>反斜杠上的注释:</p></blockquote><ul><li><p>如果使用多个反斜杠，它们必须被转义。内流按如下方式解释反斜杠:</p><ul><li><code>\\</code> 或 <code>\\\\</code> 解释为 <code>\\</code></li><li><code>\\\\\\</code> 或 <code>\\\\\\\\</code>解释为 <code>\\\\</code></li><li><code>\\\\\\\\\\</code> 或 <code>\\\\\\\\\\\\</code> 解释为 <code>\\\\\\</code>, 依次类推</li></ul></li><li><p>在tag key ,tag values和field key中，必须转义</p><ul><li>逗号</li><li>等号</li><li>空格</li></ul></li></ul><p>例如，,转义逗号。</p><ul><li>在测量中，您必须转义： <ul><li>commas</li><li>spaces</li></ul></li></ul><p>您不需要转义其他特殊字符.</p><h4 id="例子-2" tabindex="-1"><a class="header-anchor" href="#例子-2" aria-hidden="true">#</a> 例子</h4><h5 id="用特殊字符写point" tabindex="-1"><a class="header-anchor" href="#用特殊字符写point" aria-hidden="true">#</a> 用特殊字符写Point</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> <span class="token string">&quot;measurement\\ with\\ quo⚡️es\\ and\\ emoji&quot;</span><span class="token punctuation">,</span>tag\\ <span class="token keyword">key</span>\\ <span class="token keyword">with</span>\\ sp🚀ces<span class="token operator">=</span>tag\\<span class="token punctuation">,</span><span class="token keyword">value</span>\\<span class="token punctuation">,</span><span class="token keyword">with</span><span class="token string">&quot;commas&quot;</span> field_k\\ey<span class="token operator">=</span><span class="token string">&quot;string field value, only \\&quot; need be esc🍭ped&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>系统会写一个测量点&quot;measurement with quo⚡️es and emoji&quot;，tag key 为tag key with sp🚀ces，tag values为<code>tag,value,with&quot;commas&quot;</code>，field key 为field_key,field value为<code>string field value, only &quot; need be esc🍭ped</code>。</p><h3 id="附加命名准则" tabindex="-1"><a class="header-anchor" href="#附加命名准则" aria-hidden="true">#</a> 附加命名准则</h3><p><code>#</code>行的开头是line protocol的有效注释字符。openGemini将忽略所有后续字符，直到下一个换行符为止\\n。</p><p>measurement 名称，tag keys，tag values，field key 和field values区分大小写。</p><p>openGemini line protocol接受GeminiQL 关键字和 标识符名称。 我们建议避免使用 GeminiQL 关键字， 因为它可能在查询数据时引起混乱。</p><div class="hint-container warning"><p class="hint-container-title">Note</p><p>避免使用保留键<code>_field</code>和<code>_measurement</code>。如果将这些key作为标记或filed key 包括在内，则关联的point 将被丢弃。</p></div><p>关键字<code>time</code>是一种特殊情况。<code>time</code>可以是数据库名称，measurement name，retention policy name，和user名称。在这种情况下，<code>time</code>查询中不需要双引号。 <code>time</code>不能是field key或tag key; openGemini拒绝使用<code>time</code>作为tag key的写入，否则返回错误。使用<code>time</code>作为field key写入，openGemini将忽略<code>time</code>字段。</p><h2 id="opengemini-line-protocol-实践" tabindex="-1"><a class="header-anchor" href="#opengemini-line-protocol-实践" aria-hidden="true">#</a> openGemini line protocol 实践</h2><p>了解如何将line protocol 写入数据库。</p><h3 id="重复-points" tabindex="-1"><a class="header-anchor" href="#重复-points" aria-hidden="true">#</a> 重复 points</h3><p>Point由measurement 名称、tag set、filed get和timestamp组成的唯一标识</p><p>如果您将一个point 写入到一个具有与现有point 匹配的时间戳的序列中，则该field set 将成为新旧field get 的集合，而冲突则有保留新field set 。</p><p>有关这种行为以及如何避免这种行为的完整示例，请参见 <a href="../troubleshoot">openGemini如何处理重复点？</a></p><h3 id="重复-keys" tabindex="-1"><a class="header-anchor" href="#重复-keys" aria-hidden="true">#</a> 重复 keys</h3><p>不支持measurement 中具有相同名称的tag key和field key 。</p>`,62);function T(E,G){const l=n("RouterLink"),o=n("ExternalLinkIcon");return d(),r("div",null,[u,e("table",null,[e("thead",null,[e("tr",null,[m,g,h,e("th",k,[a("类型"),v,a("(有关更多信息，请参见"),t(l,{to:"/guide/geminiql/data_type.html"},{default:p(()=>[a("数据类型")]),_:1}),a(")。")])])]),y]),e("div",f,[b,e("ul",null,[e("li",null,[a("在将数据发送到openGemini之前，请按tag keys 排序，以匹配 "),e("a",x,[a("Go字节.Compare 函数"),t(o)])]),q,_])]),w])}const N=i(c,[["render",T],["__file","line_protocol.html.vue"]]);export{N as default};
